{"version":3,"sources":["assets/logoBPV.svg","context/SocketContext.js","hooks/useSocket.js","components/PlaceChart.js","assets/london.jpg","components/PlacesList.js","hooks/useFetch.js","components/AddPlace.js","hooks/useForm.js","App.js","index.js"],"names":["SocketContext","createContext","SocketProvider","children","severPath","socket","useMemo","io","connect","transports","useState","online","setonline","useEffect","connected","on","useSocket","Provider","value","PlaceChart","useContext","places","crearGrafica","off","ctx","document","getElementById","Chart","type","data","labels","map","place","name","datasets","label","borderColor","votes","options","title","display","text","fontColor","id","PlacesList","setPlaces","query","isMounted","useRef","loading","error","state","setstate","current","res","createApi","accessKey","env","ACCESS_KEY","search","getPhotos","page","orientation","then","response","results","useFetch","className","i","style","order","src","london","urls","thumb","onClick","emit","description","AddPlace","initialState","values","setValue","target","useForm","handleInputChange","reset","onSubmit","e","preventDefault","add_place","placeholder","onChange","App","logo","alt","ReactDOM","render"],"mappings":"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","file":"static/js/main.677d3eb5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logoBPV.b9b80b7f.svg\";","import { createContext } from \"react\";\nimport { useSocket } from \"../hooks/useSocket\";\n\n\n\nexport const SocketContext = createContext();\n\nexport const SocketProvider = ({ children }) => {\n\n\n     // useSocket\n     const { socket, online } = useSocket('https://socket-places-server.herokuapp.com/');\n\n     return (\n \n         <SocketContext.Provider value={{socket, online}}>\n             {children}\n         </SocketContext.Provider>\n     )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { useEffect, useMemo, useState } from 'react';\n\n// Socket cliente\nimport io from 'socket.io-client';\n\n\nexport const useSocket = (severPath) => {\n\n    // Use memo es el que va a guardar el estado del socket\n    // asi ya no se va a a volver a ejecutar, almenos que cambie\n    // de estado\n    const socket = useMemo(() => io.connect(severPath,\n        {\n            transports: ['websocket']\n        })\n        , [severPath]);\n\n\n\n    const [online, setonline] = useState(false);\n\n    useEffect(() => {\n\n        setonline(socket.connected)\n\n    }, [socket])\n\n\n    useEffect(() => {\n\n        socket.on('connect', () => {\n            setonline(true);\n        })\n\n    }, [socket])\n\n\n    useEffect(() => {\n\n        socket.on('disconnect', () => {\n            setonline(false);\n        })\n\n    }, [socket])\n\n\n    return {\n        socket,\n        online\n    }\n}","import Chart from 'chart.js';\n\nimport React, { useContext, useEffect } from 'react';\n\nimport { SocketContext } from '../context/SocketContext';\n\n\nexport const PlaceChart = () => {\n\n    const { socket } = useContext(SocketContext);\n\n\n    useEffect(() => {\n\n\n        socket.on('current-places', (places) => {\n            crearGrafica(places);\n        });\n\n        return () => socket.off('current-places');\n\n    }, [socket])\n\n\n    const crearGrafica = (places = []) => {\n\n        const ctx = document.getElementById('myChart');\n\n        new Chart(ctx, {\n            // The type of chart we want to create\n            type: 'line',\n\n            // The data for our dataset\n            data: {\n                labels: places.map(place=>place.name),\n                datasets: [{\n                    label: 'Places',\n                    borderColor: [\n                        'rgba(255, 99, 132, 1)',\n                        'rgba(54, 162, 235, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(75, 192, 192, 1)',\n                        'rgba(153, 102, 255, 1)',\n                        'rgba(255, 159, 64, 1)',\n                        'rgba(255, 99, 132, 1)',\n                        'rgba(54, 162, 235, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(75, 192, 192, 1)',\n                        'rgba(153, 102, 255, 1)',\n                        'rgba(255, 159, 64, 1)',\n                        'rgba(255, 99, 132, 1)',\n                        'rgba(54, 162, 235, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(75, 192, 192, 1)',\n                        'rgba(153, 102, 255, 1)',\n                        'rgba(255, 159, 64, 1)'\n                    ],\n\n               \n\n                    data: places.map(place=>place.votes)\n                }]\n            },\n\n            // Configuration options go here\n            options: {\n                title: {\n                    display: true,\n                    text: 'Best Place to Visit',\n                    fontColor: 'white'\n                }\n            }\n        });\n\n    }\n\n\n\n\n    return (\n        <>\n            <canvas id=\"myChart\" ></canvas>\n\n        </>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/london.ce4c73a6.jpg\";","import React, { useContext, useEffect, useState } from 'react';\nimport { useFetch } from '../hooks/useFetch';\n\n\n\n// img-logo\nimport london from '../assets/london.jpg'\n\n// Socket\nimport { SocketContext } from '../context/SocketContext';\n\nexport const PlacesList = () => {\n\n  const { socket } = useContext(SocketContext);\n\n\n   // // Trayendo data\n  const [places, setPlaces] = useState([]);\n\n  useEffect(() => {\n\n    socket.on('current-places', (places) => {\n      setPlaces(places);\n    });\n\n  }, [socket])\n\n  \n  // // function vote\n\n  const incre_votar = (id) => {\n    socket.emit('incre-place-vote', id);\n  }\n\n  const decre_vote = (id) => {\n    socket.emit('decre-place-vote', id);\n  }\n\n  // delete\n\n  const delete_place = (id) => {\n    socket.emit('delete-place', id)\n  }\n \n\n  const { response, loading } = useFetch('visit');\n\n  const createRow = () => {\n\n    \n    return (\n      places.map((place,i) => (\n        \n      \n          <li className={'list-group-item container-places m-3 fadeInUp'}\n          style={{order:place.votes}}\n          key={place.id}  >\n          {/* img and votes */}\n          <div className='cont-img-with-votes'>\n\n            <div className='img-place '>\n              {\n                loading\n                ? <img className='img-fluid imgs' src={london} />\n                : <img className='img-fluid imgs' src={response[i].urls.thumb } />             \n              }\n            </div>\n            <div className='for-votes'>\n              {/* buttons */}\n              <button type=\"button\" className=\"btn btn-info btn-like rounded-0\"\n                onClick={() => incre_votar(place.id)}\n              >\n                <i className=\"far fa-thumbs-up m-1\"></i>\n                +1\n              </button>\n              <button type=\"button\" className=\"btn btn-danger btn-dislike rounded-0\"\n                onClick={() => decre_vote(place.id)}\n              >\n\n                <i className=\"far fa-thumbs-down m-1\"></i>\n                  -1\n              </button>\n            </div>\n          </div>\n          {/* name and description */}\n\n          <div className='container-name-descip p-2'>\n            <h3>{place.name}</h3>\n            <p>{place.description}</p>\n          </div>\n\n          {/* votes */}\n          <div className='votes'>\n            <h3 className='text-center m-3'>VOTES</h3>\n            <h1 className='text-center'>{place.votes}</h1>\n\n            <button className='btn btn-danger btn-block'\n              onClick={() => delete_place(place.id)}\n            >\n              Delete\n            </button>\n\n          </div>\n        </li>\n\n     \n        \n\n      ))\n    )\n  }\n\n  return (\n    <ol className=\"list-group flex-column-reverse\" >\n      {createRow()}\n    </ol>\n  )\n}\n","import { useState ,useEffect, useRef } from \"react\"\nimport { createApi } from 'unsplash-js';\n// env\nimport env from \"react-dotenv\";\n\nexport const useFetch = ( query )=>{\n\n    const isMounted = useRef(true)\n    const [state, setstate] = useState({ data: null, loading: true , error: null})\n     \n\n    useEffect (()=>{\n\n        return ()=>{\n\n            isMounted.current = false\n        }\n\n    },[])\n\n    \n  \n\n    const unsplash = createApi({\n        accessKey: env.ACCESS_KEY,\n       \n      });\n    let res = unsplash.search.getPhotos({\n        query: query,\n        page: 1,\n        orientation: 'portrait',\n      });\n\n    useEffect ( ()=>{\n\n         res\n            // .then( resp => resp.json() )\n            .then( ({response}) =>{\n        \n                if (isMounted.current) {\n                    \n                    setstate({\n                        loading: false,\n                        error: null,\n                        response: response.results\n                    })\n                }\n            })\n    }, [query])\n\n\n    return state;\n\n}","import React, { useContext } from 'react';\n\n// Socket\nimport { SocketContext } from '../context/SocketContext';\n// Form\nimport { useForm } from '../hooks/useForm';\n\nexport const AddPlace = () => {\n\n    const {socket} = useContext(SocketContext);\n\n     // add\n    const add_place = (name, description) => {\n        socket.emit('place-add', name, description)\n    }\n\n    const [values, handleInputChange, reset] = useForm({\n        name: '',\n        description: ''\n    });\n\n    const { name, description } = values;\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        add_place(name, description);\n\n        reset();\n    }\n\n    return (\n\n\n        <form onSubmit={onSubmit} >\n            <div className='form-control container-add-place mt-3 '>\n\n                <div className='title-and-name-input justify-content-around mb-2 '>\n                    <h3>Add place</h3>\n                    <input\n\n                        placeholder='name'\n                        name='name'\n                        value={name}\n                        onChange={handleInputChange}\n                    />\n                </div>\n\n\n                <textarea\n\n                    className='form-control mb-2'\n                    name='description'\n                    placeholder='Description place'\n                    value={description}\n                    onChange={handleInputChange}\n                >\n                </textarea>\n\n                <button className='btn btn-primary'>\n                    Add\n                </button>\n            </div>\n\n        </form>\n    )\n}\n","\nimport { useState } from \"react\"\n\n\nexport const useForm = ( initialState= {} ) =>{\n\n    const [values, setValue] = useState(initialState);\n\n    const reset = ()=>{\n        setValue( initialState );\n    }\n    const handleInputChange = ({ target }) =>{\n\n        setValue({\n            ...values,\n            [target.name] : target.value\n        });\n    }\n\n\n    return [ values, handleInputChange, reset]\n    \n}","// Styles\nimport './App.css';\n\n\n// img-logo\nimport logo from './assets/logoBPV.svg'\n\n// components\nimport { PlaceChart } from './components/PlaceChart';\nimport { PlacesList } from './components/PlacesList';\n\n// react\nimport { useContext } from 'react';\nimport { AddPlace } from './components/AddPlace';\nimport { SocketContext } from './context/SocketContext';\n\n\n\n\n\nfunction App() {\n\n\n  const { online } = useContext(SocketContext);\n\n\n  return (\n\n    <div  >\n\n      {/* Nav bar */}\n      <nav className=\"navbar nav-con\">\n        <div className='d-flex'>\n          <img className='m-2 ml-3' src={logo} alt='img' />\n          <h3 className='m-2  '>Best places to visit</h3>\n        </div>\n\n        <div className='d-flex'>\n        \n          {\n            \n            online\n              ? <span className='m-4 text-success'>Online</span>\n              : <span className='m-4 text-danger'>Ofline</span>\n          }\n\n        </div>\n\n\n\n      </nav>\n\n      <div className=\"container-fluid\">\n\n        <div className=\"row\">\n\n          {/* places */}\n          <div className=\"col \">\n\n            <PlacesList/>\n          </div>\n\n          {/* Grafica */}\n          <div className=\"col \">\n            <PlaceChart />\n\n            {/* Add place */}\n\n            <AddPlace />\n          </div>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { SocketProvider } from './context/SocketContext';\n\n\nReactDOM.render(\n  <SocketProvider>\n    <App />\n\n  </SocketProvider>\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}